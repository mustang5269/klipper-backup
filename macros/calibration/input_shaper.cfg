##https://github.com/zellneralex/klipper_config/blob/master/input_shaper.cfg

###### RESONANCE TESTING #######
[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    175,175,20

[input_shaper]
shaper_type_x = zv
shaper_freq_x = 52.2
shaper_type_y = mzv
shaper_freq_y = 41.2

#####################################################################
#  Terminal and display printing macro
#####################################################################
##  action_respond_info will be always executed at the beginning of an macro evaluation.
##  Use _PRINT_AR if you need the order of several console outputs in the order given by the macro
##  Use: _PRINT_AR T="QGL forced by PRINT_START"
[gcode_macro _PRINT_AR]
description: Helper: Action response
gcode:
  {% if params.SHOW_LCD|default('false') == 'true' %} M117 {params.T} {% endif %}
  {action_respond_info(params.T)}

#####################################################################
#  Input shaper macros and graph generation
#####################################################################
# !!! This macro only works with the use of gcode_shell_command.py !!!
# Please install shell command from Kiauh (advanced section) before!
# Create a new folder from your interface called "script" and add the 
# plot_graph.sh file inside, that's the shell script that is executed
#
# Please inspect the shell script by yourself and use it at your own risk
# Functions:
#  - Remove _old files if exists
#  - rename the current files to _old
#  - copy current cvs files from /tmp to the specified folder
#  - run the calibrate_shaper.py to generate the graphs and store them at the same location
#####################################################################

#####################################################################
#  Macros
#####################################################################
# !!! This macro only works with the use of gcode_shell_command.py !!!
# you find both needed files at /klipper_config/script
#  - gcode_shell_command.py -> klipper add on file
#  - plot_graph.sh -> shell script that is executed
# 
# Setup:
#  - symlink or copy gcode_shell_command.py to /klipper/klippy/extra
#    e.g ln -s /home/pi/klipper_config/script/gcode_shell_command.py /home/pi/klipper/klippy/extras/gcode_shell_command.py
#  - klipper service restart
#
# Please inspect the shell script by yourself and use it at your own risk
# Functions:
#  - Generate folder if needed. Default path is IS_FOLDER=~/klipper_config/input_shaper
#  - Store a defined number of results for the RESONANCES_TEST/BELT_TEST. Default is STORE_RESULTS=5
#  - generate/store following files for RESONANCES_TEST:
#     - resonances_x_YYYYMMDD_HHMMSS.csv
#     - resonances_y_YYYYMMDD_HHMMSS.csv
#     - resonances_x_YYYYMMDD_HHMMSS.png
#     - resonances_y_YYYYMMDD_HHMMSS.png
#  - generate/store following files for BELT_TEST:
#     - raw_data_belt_a_YYYYMMDD_HHMMSS.csv
#     - raw_data_belt_b_YYYYMMDD_HHMMSS.csv
#     - resonances_belts_YYYYMMDD_HHMMSS.png
#  - remove files from /tmp
#####################################################################

[gcode_macro PREPARE_RESONANCES_TEST]
gcode: 
  G28
  TURN_OFF_HEATERS                                      ; turn off heaters
  M107                                                  ; turn off fan
  _PRINT_AR T="INPUT SHAPER: Noise values, check if sensor is installed"
  MEASURE_AXES_NOISE                                    ; get noise value in log
  _PRINT_AR T="INPUT SHAPER: Accelerometer query, measuring gravity"
  ACCELEROMETER_QUERY                                   ; get axis values

[gcode_macro TEST_BELTS]
gcode: 
  PREPARE_RESONANCES_TEST
  _PRINT_AR T="BELT TEST: Noise values, check if sensor is installed"
  MEASURE_AXES_NOISE                                    ; get noise value in log
  _PRINT_AR T="BELT TEST: Resonance Tests starting ..."
  _PRINT_AR T="BELT TEST: Mesasure A belt"
  TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=a
  _PRINT_AR T="BELT TEST: Mesasure B belt"
  TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=b
  _PRINT_AR T="BELT TEST: Resonance Tests done"
  _PRINT_AR T="BELT TEST: Generate graph in backround"
  RUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELT

[gcode_macro TEST_RESONANCE]
description: Run input shaper test
gcode:
  PREPARE_RESONANCES_TEST
  _PRINT_AR T="INPUT SHAPER: Noise values, check if sensor is installed"
  MEASURE_AXES_NOISE                                    ; get noise value in log
  _PRINT_AR T="INPUT SHAPER: Resonance Tests starting"
  _PRINT_AR T="INPUT SHAPER: Mesasure X axis"
  TEST_RESONANCES AXIS=X                                ; measure X
  _PRINT_AR T="INPUT SHAPER: Mesasure Y axis"
  TEST_RESONANCES AXIS=Y                                ; measure Y
  _PRINT_AR T="INPUT SHAPER: Resonance Tests done"
  _PRINT_AR T="INPUT SHAPER: Generate graph in backround"
  RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER

[gcode_shell_command plot_graph]
command: bash /home/pi/klipper_config/script/plot_graph.sh
timeout: 60.0
verbose: True

########################################################################################

[gcode_macro MEASURE_RESONNANCES_X]
gcode: 
    RESPOND PREFIX= MSG="Homing"
    G28
    #Dock_probe
    RESPOND PREFIX= MSG="Measuring resonnances on X Axis"
    SHAPER_CALIBRATE AXIS=X
    #Park_toolhead

[gcode_macro MEASURE_RESONNANCES_Y]
gcode: 
    RESPOND PREFIX= MSG="Homing"
    G28
    #Dock_probe
    RESPOND PREFIX= MSG="Measuring resonnances on Y Axis"
    SHAPER_CALIBRATE AXIS=Y
    #Park_toolhead